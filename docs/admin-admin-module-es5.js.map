{"version":3,"sources":["webpack:///src/app/admin/add-admin/add-admin.component.ts","webpack:///src/app/admin/add-admin/add-admin.component.html","webpack:///src/app/admin/add-workshop/add-workshop.component.ts","webpack:///src/app/admin/add-workshop/add-workshop.component.html","webpack:///src/app/admin/addslider/addslider.component.ts","webpack:///src/app/admin/addslider/addslider.component.html","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/change-pass/change-pass.component.ts","webpack:///src/app/admin/change-pass/change-pass.component.html","webpack:///src/app/admin/contect-message/contect-message.component.ts","webpack:///src/app/admin/contect-message/contect-message.component.html","webpack:///src/app/admin/dashboard/dashboard.component.ts","webpack:///src/app/admin/dashboard/dashboard.component.html","webpack:///src/app/admin/display-admins/display-admins.component.ts","webpack:///src/app/admin/display-admins/display-admins.component.html","webpack:///src/app/admin/display-register-workshop/display-register-workshop.component.ts","webpack:///src/app/admin/display-register-workshop/display-register-workshop.component.html","webpack:///src/app/admin/display-total-workshop/display-total-workshop.component.ts","webpack:///src/app/admin/display-total-workshop/display-total-workshop.component.html","webpack:///src/app/admin/edit-admin/edit-admin.component.ts","webpack:///src/app/admin/edit-admin/edit-admin.component.html","webpack:///src/app/admin/edit-slider/edit-slider.component.ts","webpack:///src/app/admin/edit-slider/edit-slider.component.html","webpack:///src/app/admin/editworkshop/editworkshop.component.ts","webpack:///src/app/admin/editworkshop/editworkshop.component.html","webpack:///src/app/admin/mypipe.pipe.ts","webpack:///src/app/admin/profile/profile.component.ts","webpack:///src/app/admin/profile/profile.component.html","webpack:///src/app/guard/deactivate.guard.ts"],"names":["AddAdminComponent","formbuilder","services","router","http","data","imgset","signupform","group","fullname","required","minLength","maxLength","username","psw","conformpass","gender","mobileno","address","imgpath","validators","MustMatch","slice","controls","setValue","controlName","matchingControlName","formGroup","control","matching","errors","value","setErrors","console","log","createdata","admin","registerdata","subscribe","result","alert","customvar","get","submitdata","onselectedFile","selector","templateUrl","styleUrls","AddWorkshopComponent","service","passdata","src","title","date","description","passdat","editevt","navigate","AddsliderComponent","dis","editdata","image","masg","name","city","display","id","createSlider","reset","editsliderd","book","slider","addslider","profAns","editslider","window","confirm","deleteslider","routes","path","component","canDeactivate","children","pathMatch","redirectTo","AdminRoutingModule","forChild","imports","exports","AdminComponent","titleservice","workservice","contser","imgpathname","getadmindWithId","localStorage","getItem","pipe","setTitle","pass","setPageTitle","AdminModule","declarations","ChangePassComponent","Activerouter","changep","changepass","newpass","Updateadmindata","logindata","ContectMessageComponent","contactArry","displaycontact","disContactInfo","deletecontedtmsg","DashboardComponent","imgpathid","sliderid","workshop","workshopreg","contact","ids","getadmindata","ddd","displayworkshop","printevent","DisplayAdminsComponent","mydata","Deleteadmindata","DisplayRegisterWorkshopComponent","printdata","displaydata","deleteworkshop","DisplayTotalWorkshopComponent","bookidtoupdate","Date","displaytotalWorkshop","event","selectedFile","target","deleteWorkshop","EditAdminComponent","parseInt","snapshot","params","paddingdata","substring","change","editdatas","close","EditSliderComponent","EditworkshopComponent","URL","displayworkshopid","edit","UpdateBook","MypipePipe","ProfileComponent","DeactivateGuard","currentRoute","currentState","nextState","Error","providedIn"],"mappings":"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","file":"admin-admin-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AdminRegister } from 'src/app/interfaceClass/admin-register';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { UpcomingEvtSerService } from 'src/app/services/upcoming-evt-ser.service';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-admin',\n  templateUrl: './add-admin.component.html',\n  styleUrls: ['./add-admin.component.css']\n})\nexport class AddAdminComponent implements OnInit {\n  signupform:FormGroup;\n  data : any = \"\";\n  imgset : any = \"\";\n  constructor(private formbuilder:FormBuilder , private services:AdminService, private router:Router,private http:HttpClient) {\n\n\n   }\n  ngOnInit(): void {\n    this.signupform = this.formbuilder.group({  \n      fullname:new FormControl('',[Validators.required,Validators.minLength(5),Validators.maxLength(30)]),\n      username:new FormControl('',[Validators.required]),\n      psw:new FormControl(null,[Validators.required]),\n      conformpass: new FormControl(null,[Validators.required]),\n      gender:new FormControl('',Validators.required),\n      mobileno:new FormControl('',Validators.required),\n      address:new FormControl('',Validators.required),\n      imgpath:new FormControl('',Validators.required)\n    },{\n      validators :this.MustMatch('psw','conformpass')\n    });\n    \n  }\n  get fullname(){    return this.signupform.get('fullname');  }\n  get username(){    return this.signupform.get('username');  }\n  get psw(){    return this.signupform.get('psw');  }\n  get conformpass(){    return this.signupform.get('conformpass');  }\n  get gender(){    return this.signupform.get('gender');  }\n  get mobileno(){    return this.signupform.get('mobileno');  }\n  get address(){    return this.signupform.get('address');  }\n  get imgpath(){    return this.signupform.get('imgpath');  }\n\n \n  onselectedFile(){\n     this.imgset = this.data.slice(12);\n   return this.signupform.controls['imgpath']?.setValue(this.imgset);\n  }\n\n    MustMatch(controlName: string,matchingControlName:string){\n    return(formGroup:FormGroup)=>{\n      const control = formGroup.controls[controlName];\n      const matching = formGroup.controls[matchingControlName];\n      if(matching.errors && !matching.errors.MustMatch){\n        return \n      }\n      if(control.value != matching.value){\n        matching.setErrors({MustMatch:true})\n      }else{\n        matching.setErrors(null);\n      }\n    }\n  }\n\n\nsubmitdata(signupform:any){\n  console.log(signupform.controls);\n  let data = signupform.value;\n  \n  this.createdata(data);\n  \n}\ncustomvar;\ncreatedata(admin:AdminRegister){\nreturn this.services.registerdata(admin).subscribe( result => {\n  alert(\"data created sussfully\");\n  this.customvar = result\n});\n\n\n\n}\n\n\n\n}\n\n","<div class=\"container\">\n       <div class=\"register\">\n          <h2>Add Admin</h2>\n          <form [formGroup]='signupform' (ngSubmit)=\"submitdata(signupform)\">\n            <div class=\"inputBox\">\n                <input type=\"text\" name=\"fullname\" id=\"fullname\" formControlName=\"fullname\" required/>\n                <label for=\"fullname\"><i class=\"fa fa-user\"></i>&nbsp; fullname :</label>\n                <div class=\"text-danger\" *ngIf=\"!fullname?.valid && (fullname?.touched || fullname?.dirty)\">\n                  please enter your full name\n                </div>\n             </div>\n             <div class=\"inputBox\">\n                <input type=\"text\" name=\"username\" id=\"username\" formControlName=\"username\"  required/>\n                <label for=\"username\"><i class=\"fa fa-envelope\"></i>&nbsp; UserName :</label>\n                <span *ngIf=\"!fullname?.valid && (fullname?.touched || fullname?.dirty)\">\n                  required\n                </span>\n             </div>\n             <div class=\"inputBox\">    \n                <input type=\"text\" id=\"psw\" name=\"psw\"  formControlName=\"psw\" required>\n                <label><i class=\"fa fa-eye\" aria-hidden=\"true\"></i>&nbsp; Password</label> \n                <div class=\"text-danger\" *ngIf=\"!psw?.valid && (psw?.touched || psw?.dirty)\">\n                  please enter your full name\n                </div>\n          </div>\n             <div class=\"inputBox\">    \n                <input type=\"text\" name=\"conformpass\" id=\"conformpass\" formControlName=\"conformpass\" required/>\n                <label><i class=\"fa fa-eye\" aria-hidden=\"true\"></i>&nbsp; Confirm Password : </label>\n                <div *ngIf=\"conformpass.errors\" class=\"text-success\">\n                  <span *ngIf=\"conformpass.errors.required\" >\n                    please enter confirm password\n                  </span>\n                  <span *ngIf=\"conformpass.errors.MustMatch\" >\n                    Password dosen't matched\n                  </span>\n               </div>\n           \n           \n             </div>\n             <div class=\" radiobtn\">\n               <label><i class=\"fa fa-transgender\" aria-hidden=\"true\"></i>&nbsp; Gender : </label>\n               <label><input type=\"radio\" name=\"gender\" id=\"Male\" formControlName=\"gender\"  value=\"Male\" /> Male </label>\n               <label><input type=\"radio\" name=\"gender\" id=\"Female\" formControlName=\"gender\"  value=\"Female\"/> FeMale</label>\n               <div class=\"text-danger\" *ngIf=\"!gender?.valid && (gender?.touched || gender?.dirty)\">\n                  please enter your full name\n                </div>\n             </div>\n             <div class=\"inputBox\">\n                <input type=\"number\" id=\"mobileno\"  formControlName=\"mobileno\" required/>\n                <label><i class=\"fa fa-phone\" aria-hidden=\"true\"></i>&nbsp; Mobile Number :</label>\n                <div class=\"text-danger\" *ngIf=\"!mobileno?.valid && (mobileno?.touched || mobileno?.dirty)\">\n                  please enter your full name\n                </div>\n             </div>\n             <div class=\"inputBox addressBx\">\n                <input type=\"text\" id=\"address\" name=\"address\" formControlName=\"address\" required/>\n                <span class=\"forgot locate\"><a href=\"#\"><i class=\"fa fa-map-marker\"></i></a> </span>\n                <label><i class=\"fa fa-home\" aria-hidden=\"true\"></i>&nbsp; Address</label>\n                <div class=\"text-danger\" *ngIf=\"!address?.valid && (address?.touched || address?.dirty)\">\n                  please enter your full name\n                </div>\n             </div>\n             <div class=\"inputBox\">\n               <input type=\"file\" name=\"imgpath\" id=\"imgpath\" formControlName=\"imgpath\" (change)=onselectedFile() [(ngModel)]=\"data\" />\n               <label for=\"fullname\"><i class=\"fa fa-user\"></i>&nbsp; SRC :</label>\n               <div class=\"text-danger\" *ngIf=\"!imgpath?.valid && (imgpath?.touched || imgpath?.dirty)\">\n                  please enter your full name\n                </div>\n            </div>\n            \n             <div class=\"text-center\">\n             <button class=\"btn btn-success btn-lg\" [disabled]=\"!signupform.valid\">Register</button>\n             <span class=\"go_regster\">Already have an account?<a routerLink=\"/login\" title=\"Sign Up\"> Sign In</a></span>\n             <span class=\"go_regster\"><a routerLink=\"/\" title=\"Sign Up\"> Back To Home</a></span>\n             </div>\n         \n          </form>\n       </div> \n    </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UpcomingEvt } from 'src/app/interfaceclass/upcoming-evt';\nimport { WorkshopService } from 'src/app/services/workshop.service';\n\n@Component({\n  selector: 'app-add-workshop',\n  templateUrl: './add-workshop.component.html',\n  styleUrls: ['./add-workshop.component.css']\n})\nexport class AddWorkshopComponent implements OnInit {\n  passdata:FormGroup;\n  data : any = \"\";\n  imgset : any = \"\";\n  constructor(private formbuilder:FormBuilder , private service:WorkshopService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.passdata = this.formbuilder.group({\n       src: new FormControl('',[Validators.required]),\n       title: new FormControl('',[Validators.required,Validators.minLength(5),Validators.maxLength(30)]),\n      date: new FormControl('',[Validators.required]),\n      description: new FormControl('',[Validators.required,Validators.minLength(15),Validators.maxLength(40)])\n    });\n  }\n   get src(){\n    return this.passdata.get('selectedFile');\n  }\n  get title(){\n    return this.passdata.get('title');\n  }\n  get date(){\n    return this.passdata.get('date');\n  }\n  get description(){\n    return this.passdata.get('description');\n  }\n  onselectedFile(){\n    this.imgset = this.data.slice(12);\n  return this.passdata.controls['src']?.setValue(this.imgset);\n }\n\nsubmitdata(passdata:any){\n  console.log(passdata.controls);\n  let data = passdata.value;\n  this.createdata(data);\n  }\n  customvar;\n  createdata(passdat:UpcomingEvt){\n    this.service.editevt(passdat).subscribe(data =>  {\n      this.router.navigate(['/admin/displayWorkshop']);\n      this.customvar = data\n    });\n    }\n}\n","<div class=\"add-workshop\">\n    <div class=\"container\">\n        <h2 >Add New Workshop</h2>\n        <div class=\"row\">\n            <div class=\"col-xs-12\">\n            <form [formGroup]=\"passdata\" (ngSubmit)=\"submitdata(passdata)\">\n                    <div class=\"form-group\">\n                <input type=\"file\" formControlName=\"src\"  id=\"src\" name=\"src\"  (change)=onselectedFile()  [(ngModel)]=\"data\"  placeholder=\"enter title\" class=\"form-control\"/>\n                <span class=\"text-danger\" *ngIf=\"!src?.valid && (src?.touched || src?.dirty)\" >\n                    Please enter your src \n                 </span> \n            </div>\n            <div class=\"form-group\">\n                <input type=\"text\" formControlName=\"title\" name=\"title\" placeholder=\"enter title\" class=\"form-control\" />\n                <span class=\"text-danger\" *ngIf=\"!title?.valid && (title?.touched || title?.dirty)\" >\n                    Please enter your title \n                 </span> \n            </div>\n            <div class=\"form-group\">\n                <input type=\"date\" formControlName=\"date\" name=\"date\" placeholder=\"enter title\" class=\"form-control\" />\n                <span class=\"text-danger\" *ngIf=\"!date?.valid && (date?.touched || date?.dirty)\" >\n                    Please enter your date \n                 </span> \n            </div>\n            <div class=\"form-group\">\n                <textarea formControlName=\"description\" name=\"description\" placeholder=\"enter description\" class=\"form-control input-lg\"></textarea>\n                <span class=\"text-danger\" *ngIf=\"!description?.valid && (description?.touched || description?.dirty)\" >\n                    Please enter your description \n                 </span> \n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-success btn-lg\" [disabled]=\"!passdata?.valid\">Submit</button>\n            </div>\n            </form>\n            </div>\n        </div>\n    </div>\n    </div> \n    ","import { Component, OnInit } from '@angular/core';\nimport { ProfAns } from 'src/app/interfaceclass/prof-ans';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SliderService } from 'src/app/services/slider.service';\n\n\n@Component({\n  selector: 'app-addslider',\n  templateUrl: './addslider.component.html',\n  styleUrls: ['./addslider.component.css']\n})\nexport class AddsliderComponent implements OnInit {\n  data : any = \"\";\n  imgset : any = \"\";\n  dis : any = {};\n  book : ProfAns;\n  // slider = new ProfAns();\n  // slider !: Observable<ProfAns>;\n  imgpath = \"./assets/img/\";\n  signupform:FormGroup;\n  editdata:any = {};\n  constructor(private service:SliderService, private router:Router, private formbuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.signupform = this.formbuilder.group({\n      image: ['',[Validators.required]],\n      masg: ['',[Validators.required,Validators.minLength(5),Validators.maxLength(30)]],\n      name: ['',[Validators.required,Validators.minLength(5),Validators.maxLength(20)]],\n      city: ['',[Validators.required,Validators.minLength(5),Validators.maxLength(10)]]\n    })\n    this.display();\n  }\n  get image(){\n    return this.signupform.get('image');\n  }\n  get masg(){\n    return this.signupform.get('masg');\n  }\n  get name(){\n    return this.signupform.get('name');\n  }\n  get city(){\n    return this.signupform.get('city');\n  }\n\n  onselectedFile(){\n    this.imgset = this.data.slice(12);\n  return this.signupform.controls['image']?.setValue(this.editdata.image);\n }\n \n  submitdata(signupform:any){\n    if(this.editdata.id == 0){\n      let data = signupform.value;\n      this.createSlider(data);\n      this.signupform.reset();\n    }else{\n      this.service.editsliderd(this.book.id, this.editdata).subscribe(result => {\n        alert('Slider Edited Successfully');\n      })\n    }\n   \n   \n  }\n  customvar;\n  createSlider(slider:ProfAns){\n   return this.service.addslider(slider).subscribe(data =>{\n    alert(\"slider added\");\n    this.customvar =  data;\n    // this.router.navigate(['/home/login']);\n    this.display();\n   });\n  }\n  display(){\n    this.service.profAns().subscribe(data =>{\n      this.dis = data\n    })\n  }\n  edit(id){\n    this.service.editslider(id).subscribe( result => {\n      this.editdata = result\n    })\n  }\n  deleteslider(id){\n    if( window.confirm(\"are you sure want to delete data ??   \")){\nthis.service.deleteslider(id).subscribe(data =>{\n  this.customvar = data;\n  this.display();\n});\n    }\n  }\n}\n","<div class=\"container\">\n    <form [formGroup]=\"signupform\" >\n        <div class=\"form-group\">\n  \n            <input type=\"file\" formControlName=\"image\" name=\"image\"  (change)=onselectedFile()  [(ngModel)]=\"editdata.image\" class=\"form-control\">\n            <span class=\"text-danger\" *ngIf=\"!image?.valid && (image?.touched || image?.dirty)\" >\n                Please enter your src \n             </span>\n        </div>\n        <div class=\"form-group\">\n            <input type=\"text\" formControlName=\"masg\" name=\"masg\" id=\"masg\"  class=\"form-control\" [(ngModel)]=\"editdata.masg\" placeholder=\"enter msg\">\n            <span class=\"text-danger\" *ngIf=\"!masg?.valid && (masg?.touched || masg?.dirty)\" >\n                Please enter your src \n             </span> \n        </div>\n        <div class=\"form-group\">\n            <input type=\"text\" formControlName=\"name\" name=\"name\" id=\"name\"  class=\"form-control\" [(ngModel)]=\"editdata.name\" placeholder=\"enter name\">\n            <span class=\"text-danger\" *ngIf=\"!name?.valid && (name?.touched || name?.dirty)\" >\n                Please enter your src \n             </span> \n        </div>\n        <div class=\"form-group\">\n            <input type=\"text\" formControlName=\"city\" name=\"city\" id=\"city\"  class=\"form-control\" [(ngModel)]=\"editdata.city\" placeholder=\"enter city\">\n            <span class=\"text-danger\" *ngIf=\"!city?.valid && (city?.touched || city?.dirty)\" >\n                Please enter your src \n             </span> \n        </div>\n        <div class=\"form-group\">\n            <button class=\"btn btn-success\" (ngSubmit)=\"submitdata(signupform)\">Submit</button>\n            <!-- [disabled]=\"!signupform?.valid\" -->\n        </div>\n    </form>\n</div>\n\n\n<div class=\"print-event\">\n    <div class=\"container\">\n        <h2>Display slider</h2>\n        <div class=\"table-responsive table-design\">\n        <table class=\"table table-bordered table-striped\">\n            <thead>\n            <tr>\n                <th>ID</th>\n                <th>image</th>\n                <th>masg</th>\n                <th>name</th>\n                <th>city</th>\n                <th>Edit data</th>\n                <th>Delete data</th>\n            </tr>\n        </thead>\n            <tbody>\n            <tr *ngFor=\"let display of dis\">\n                <td>{{display.id}}</td>\n                <td><img src=\"{{imgpath}}{{display.image}}\" alt=\"\" width=\"80px\"> </td>\n                <td>{{display.masg}}</td>\n                <td title=\"{{display.name}}\">{{display.name}}</td>\n                <td title=\"{{display.city}}\">{{display.city}}</td>\n                <td > <span class=\"btn btn-success\" (click)=\"edit(display.id)\">Edit data </span>  </td>\n                <td > <span class=\"btn btn-danger\" (click)=\"deleteslider(display.id)\">Delete data </span>  </td>\n                \n            </tr>\n        </tbody>\n        </table>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { AddWorkshopComponent } from './add-workshop/add-workshop.component';\nimport { DisplayRegisterWorkshopComponent } from './display-register-workshop/display-register-workshop.component';\nimport { ContectMessageComponent } from './contect-message/contect-message.component';\nimport { AddAdminComponent } from './add-admin/add-admin.component';\nimport { DisplayAdminsComponent } from './display-admins/display-admins.component';\nimport { EditAdminComponent } from './edit-admin/edit-admin.component';\nimport { ChangePassComponent } from './change-pass/change-pass.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DisplayTotalWorkshopComponent } from './display-total-workshop/display-total-workshop.component';\nimport { AddsliderComponent } from './addslider/addslider.component';\nimport { EditworkshopComponent } from './editworkshop/editworkshop.component';\nimport { DeactivateGuard } from '../guard/deactivate.guard';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditSliderComponent } from './edit-slider/edit-slider.component';\n\n\n\nconst routes: Routes = [\n  {path:'', component:AdminComponent,canDeactivate: [DeactivateGuard],\n  // canActivateChild:[ActivatechildGuard],\n  children:[\n    { path:'', component:DashboardComponent,pathMatch:'full', redirectTo:'dashboard' },\n    { path:'dashboard', component:DashboardComponent },\n    { path:'Add-workshop', component:AddWorkshopComponent},\n    { path:'Add-workshop', component:AddWorkshopComponent},\n    { path:'registerWorkshopData', component:DisplayRegisterWorkshopComponent },\n    { path:'contectData', component:ContectMessageComponent },\n    { path:'addadmin', component:AddAdminComponent },\n    { path:'changePass', component:ChangePassComponent },\n    { path:'profile', component:ProfileComponent },\n\n    { path:'addslider', component:AddsliderComponent,\n    children:[\n      { path:'editslider/:id', component:EditSliderComponent }\n    ]},\n\n    { path:'displayadmin', component:DisplayAdminsComponent,\n    children:[\n      { path:'editadmin/:id', component:EditAdminComponent }\n    ]},\n    { path:'displayWorkshop', component:DisplayTotalWorkshopComponent,\n    children:[\n      { path:'editworkshop/:id', component:EditworkshopComponent }\n    ]},\n    \n  ] },\n \n \n];\n \n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {Title} from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AdminRegister } from '../interfaceclass/admin-register';\nimport { AdminService } from '../services/admin.service';\nimport { ContactUsService } from '../services/contact-us.service';\nimport { SliderService } from '../services/slider.service';\nimport { WorkshopService } from '../services/workshop.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n \n \n  title=\"Dashboard\";\n  imgpathname :Observable<AdminRegister>;\n\n  imgpath = \"./assets/img/\";\n  constructor(private titleservice:Title, public router: Router, private services:AdminService,\n     private service:SliderService,\n     private workservice:WorkshopService,\n     private contser:ContactUsService) {\n    \n  }\n\n  ngOnInit(): void {\n    this.imgpathname = this.services.getadmindWithId(localStorage.getItem('loginid')).pipe(map(book => book.imgpath));\n\n\n  }\n \n\n  \n\n  setPageTitle(title:string){\n    this.titleservice.setTitle(title);\n  }\n  logindata(pass:any){\n\n  }\n\n}","<script src=\"/src/assets/js/custom.js\"></script>\n<div class=\"main\">\n    <div id=\"sidebar\">\n\n       <ul class=\"Amenu\">\n          <li><a [routerLink]=\"['/admin']\" routerLinkActive=\"active\" (click)=\"setPageTitle('Dashboard')\"> Home</a></li>\n          <li><a [routerLink]=\"['/admin/addslider']\" routerLinkActive=\"active\" (click)=\"setPageTitle('Add slider')\"> Register slider</a></li>\n\n          <li><a [routerLink]=\"['/admin/Add-workshop']\" routerLinkActive=\"active\" (click)=\"setPageTitle('Add workshop')\"> Register workshop</a></li>\n\n          <li><a [routerLink]=\"['/admin/displayWorkshop']\" routerLinkActive=\"active\" (click)=\"setPageTitle('Display workshop')\"> Total Workshop</a></li>\n          <li><a [routerLink]=\"['/admin/registerWorkshopData']\" routerLinkActive=\"active\" (click)=\"setPageTitle('Workshops data')\"> Workshops Registeration</a></li>\n           <li><a [routerLink]=\"['/admin/contectData']\" routerLinkActive=\"active\" (click)=\"setPageTitle('Contect Data')\"> Contect Data</a></li> \n           <li><a [routerLink]=\"['/admin/addadmin']\" routerLinkActive=\"active\" (click)=\"setPageTitle('Add Admin')\"> Register Admin</a></li>\n           <li><a [routerLink]=\"['/admin/displayadmin']\" routerLinkActive=\"active\" (click)=\"setPageTitle('Display Admin')\"> Total Admin</a></li>\n       </ul>\n      \n       <p class=\"hide_show hide_show-mobile\" ><i class=\"fa fa-bars\" aria-hidden=\"true\" onclick=\"myFunction()\"></i></p>\n\n    </div>\n   \n    <div class=\"main-content\">\n         <div class=\"header\">\n            <h2 class=\"title\"> <p class=\"hide_show\" id=\"hide_show\"><i class=\"fa fa-bars\" aria-hidden=\"true\" onclick=\"myFunction()\"></i></p> {{title}}</h2>  \n            <div class=\"dropdown profile\">\n               <img src=\"{{imgpath}}{{imgpathname|async}}\" alt=\"\" id=\"menu1\" data-toggle=\"dropdown\" class=\" dropdown-toggle\">\n               <ul class=\"dropdown-menu dropdown-menu-right tip\" role=\"menu\" aria-labelledby=\"menu1\">\n                  <li><a routerLink=\"profile\" routerLinkActive=\"active\">Profile</a></li>                  \n                  <li><a routerLink=\"changePass\"routerLinkActive=\"active\" >Change Password</a></li>\n                  <li class=\"divider\"></li>\n                  <li><a routerLink=\"/\" routerLinkActive=\"active\">Log Out</a></li>\n                  \n               </ul>\n            </div>\n         </div>\n         <router-outlet></router-outlet>\n     \n\n        \n        \n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './admin.component';\nimport { AddWorkshopComponent } from './add-workshop/add-workshop.component';\nimport { DisplayRegisterWorkshopComponent } from './display-register-workshop/display-register-workshop.component';\nimport { ContectMessageComponent } from './contect-message/contect-message.component';\nimport { AddAdminComponent } from './add-admin/add-admin.component';\nimport { DisplayAdminsComponent } from './display-admins/display-admins.component';\nimport { EditAdminComponent } from './edit-admin/edit-admin.component';\nimport { ChangePassComponent } from './change-pass/change-pass.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DisplayTotalWorkshopComponent } from './display-total-workshop/display-total-workshop.component';\nimport { AddsliderComponent } from './addslider/addslider.component';\nimport { EditworkshopComponent } from './editworkshop/editworkshop.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MypipePipe } from './mypipe.pipe';\nimport { EditSliderComponent } from './edit-slider/edit-slider.component';\n\n\n\n@NgModule({\n  declarations: [AdminComponent, AddWorkshopComponent, DisplayRegisterWorkshopComponent, ContectMessageComponent, AddAdminComponent, DisplayAdminsComponent, EditAdminComponent, ChangePassComponent, ProfileComponent, DisplayTotalWorkshopComponent, AddsliderComponent, EditworkshopComponent, DashboardComponent, MypipePipe, EditSliderComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-change-pass',\n  templateUrl: './change-pass.component.html',\n  styleUrls: ['./change-pass.component.css']\n})\nexport class ChangePassComponent implements OnInit {\n  changepass:FormGroup;\n  id = \"1\";\n  changep:any = {};\n\n  constructor(private formbuilder:FormBuilder,private Activerouter:ActivatedRoute,private services:AdminService,private router:Router ) { }\n\n  ngOnInit(): void {\n    this.services.getadmindWithId(localStorage.getItem('loginid')).subscribe(data => this.changep = data);\n\n    this.changepass = this.formbuilder.group({\n      psw:['',[Validators.required]],\n      newpass:['',[Validators.required]]\n    });\n  }\nget psw(){\n  return this.changepass.get('psw');\n}\nget newpass(){\n  return this.changepass.get('newpass');\n}\ncustomvar;\n  logindata(pass){\n    this.services.Updateadmindata(localStorage.getItem('loginid'),this.changep).subscribe(data => {\n      this.router.navigate(['admin/displayadmin'])\n      this.customvar =  data;\n  });\n    console.log(pass.value);\n  }\n}\n","\n     <div class=\"login\">\n        <h2>Change Password</h2>\n        <form [formGroup]=\"changepass\" (ngSubmit)=\"logindata(changepass)\">\n           <!-- <div class=\"inputBox\">\n              <input type=\"text\" id=\"psw\" name=\"psw\" formControlName=\"psw\" [(ngModel)]=\"changep.psw\" required readonly/>\n              <label><i class=\"fa fa-user\"></i> Enter New Password </label>\n              <span class=\"text-danger\" *ngIf=\"!psw?.valid && (psw?.touched || psw?.dirty)\" >\n                  Please enter your current password\n               </span>\n           </div> -->\n\n           <div class=\"inputBox\">\n              <input type=\"text\" id=\"psw\" name=\"psw\" formControlName=\"psw\" [(ngModel)]=\"changep.psw\" />\n              <label><i class=\"fa fa-eye\" aria-hidden=\"true\"></i>New Password</label> \n              <span class=\"text-danger\" *ngIf=\"!newpass?.valid && (newpass?.touched || newpass?.dirty)\" >\n                  Please enter your password\n               </span>\n           </div>\n           <!-- <div class=\"inputBox\">\n            <input type=\"password\" id=\"psw\" name=\"psw\"  />\n            <label><i class=\"fa fa-eye\" aria-hidden=\"true\"></i>Re-Type Password</label> \n         </div> -->\n           <button type=\"login\" class=\"btn btn-primary btn-block\"> Change Password </button>\n           <div class=\"text-center\">\n           <div class=\"go_regster\">Not a member yet?<br>\n           <a routerLink=\"/register\" title=\"Sign Up\"> Sign Up For User</a><br>\n           <div class=\"go_regster\"><a routerLink=\"/admin\" title=\"Sign Up\" class=\"text-success\"> Back To Home</a></div>\n        </div>\n      </div>\n        </form>\n     </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ContactUsService } from 'src/app/services/contact-us.service';\n\n@Component({\n  selector: 'app-contect-message',\n  templateUrl: './contect-message.component.html',\n  styleUrls: ['./contect-message.component.css']\n})\nexport class ContectMessageComponent implements OnInit {\n  contactArry={};\n  constructor(private service:ContactUsService) { }\n\n  ngOnInit(): void {\n    this.displaycontact();\n  }\ndisplaycontact(){\nthis.service.disContactInfo().subscribe(data => this.contactArry = data);\n}\ndelete(id){\n  if(window.confirm(\"are you sure want to delete data ?\")){\n    this.service.deletecontedtmsg(id).subscribe(data => this.displaycontact());\n  }\n}\n}\n","<div class=\"print-event\">\n    <div class=\"container\">\n        <h2>Contect Messages</h2>\n        <table class=\"table table-bordered table-striped table-design\">\n            <thead>\n            <tr>\n                <th>ID</th>\n                <th>name</th>\n                <th>email</th>\n                <th>phone</th>\n                <th>msgs</th>\n                <th>Delete data</th>\n            </tr>\n        </thead>\n            <tbody>\n            <tr *ngFor=\"let cmsg of contactArry\">\n                <td>{{cmsg.id}}</td>\n                <td title=\"{{cmsg.name}}\">{{cmsg.name}}</td>\n                <td><a href=\"mailto:{{cmsg.email}}\" title=\"{{cmsg.email}}\">{{cmsg.email}}</a></td>\n                <td title=\"{{cmsg.phone}}\">{{cmsg.phone}}</td>\n                <td title=\"{{cmsg.msgs}}\">{{cmsg.msgs}}</td>\n                <td><span (click)=\"delete(cmsg.id)\" class=\"btn btn-danger\">Delete data</span></td>\n            </tr>\n        </tbody>\n        </table>\n    </div></div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AdminRegister } from 'src/app/interfaceclass/admin-register';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { ContactUsService } from 'src/app/services/contact-us.service';\nimport { SliderService } from 'src/app/services/slider.service';\nimport { WorkshopService } from 'src/app/services/workshop.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  title=\"Dashboard\";\n  imgpathname :Observable<AdminRegister>;\n  imgpathid:any ={};\n  sliderid:any = {};\n  workshop:any = {};\n  workshopreg:any = {};\n  contact:any = {};\n  pass:FormGroup;\n  ids:number = 2;\n\n  imgpath = \"./assets/img/\";\n  constructor(private titleservice:Title, public router: Router, private services:AdminService,\n    private service:SliderService,\n    private workservice:WorkshopService,\n    private contser:ContactUsService) { }\n\n  ngOnInit(): void {\n    this.services.getadmindata().subscribe(ddd => this.imgpathid = ddd);\n    this.service.profAns().subscribe(ddd => this.sliderid = ddd);\n    this.workservice.displayworkshop().subscribe(ddd => this.workshop = ddd);\n    this.contser.disContactInfo().subscribe(ddd => this.contact = ddd);\n    this.workservice.printevent().subscribe(ddd => this.workshopreg = ddd);\n\n  }\n \n}\n","<div class=\"row\">\n    <div class=\"col-md-3\">\n\n       <div class=\"thumbnail blue_bg_color\">\n          <span *ngFor=\"let s of imgpathid;last as i ;\">\n             <h3 *ngIf=\"i\">\n                Total Admin : {{s.id}} \n             </h3>      \n       </span>\n       </div>\n       </div>\n       <div class=\"col-md-3\">\n       <div class=\"thumbnail blue_bg_color\">\n          <span *ngFor=\"let s of sliderid;last as i ;\">\n             <h3 *ngIf=\"i\">\n                Total Slider : {{s.id}} \n             </h3>      \n       </span>\n       </div>\n    </div>\n    <div class=\"col-md-3\">\n       <div class=\"thumbnail blue_bg_color\">\n          <span *ngFor=\"let s of workshop;last as i ;\">\n             <h3 *ngIf=\"i\">\n                Total Workshop : {{s.id}} \n             </h3>      \n       </span>\n       </div>\n    </div>\n    <div class=\"col-md-3\">\n       <div class=\"thumbnail blue_bg_color\">\n          <span *ngFor=\"let s of workshopreg;last as i ;\">\n             <h3 *ngIf=\"i\">\n                Total Regristration Workshop : {{s.id}} \n             </h3>      \n       </span>\n       </div>\n    </div>\n    <div class=\"col-md-3\">\n       <div class=\"thumbnail blue_bg_color\">\n          <span *ngFor=\"let s of contact;last as i ;\">\n             <h3 *ngIf=\"i\">\n                Total Contact Message : {{s.id}} \n             </h3>      \n       </span>\n       </div>\n    </div>\n </div>\n{{200 | mypipe}}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-display-admins',\n  templateUrl: './display-admins.component.html',\n  styleUrls: ['./display-admins.component.css']\n})\nexport class DisplayAdminsComponent implements OnInit {\n\n\n  mydata:any= {};\n  imgpath = \"./assets/img/\";\n  constructor(private service:AdminService,private http:HttpClient) { }\n\n  ngOnInit(): void {\n    this.display();\n  }\ndisplay(){\n  this.service.getadmindata().subscribe(data => this.mydata = data)\n}\ndeletedata(id){\n  if( window.confirm(\"are you sure want to delete data ??   \")){\n    this.service.Deleteadmindata(id).subscribe(data => this.display() )\n    }\n}\n\n\n}","<div class=\"print-event\">\n    <div class=\"container\">\n        <h2>Total Admins</h2>\n        <div class=\"table-responsive table-design\">\n        <table class=\"table table-bordered table-striped\">\n            <thead>\n            <tr>\n                <th>ID</th>\n                <th>fullname</th>\n                <th>imgpath</th>\n                <th>username</th>\n                <th>password</th>\n                <th>Gender</th>\n                <th>mobileno</th>\n                <th>address</th>\n                <th>Edit Data</th>\n                <th>Delete Data</th>\n            </tr>\n        </thead>\n            <tbody>\n            <tr *ngFor=\"let display of mydata\">\n                <td>{{display.id}}</td>\n                <td title=\"{{display.fullname}}\">{{display.fullname}}</td>\n                <td><img src=\"{{imgpath}}{{display.imgpath}}\" alt=\"\" width=\"80px\"> </td>\n                <td><a href=\"mailto:{{display.username}}\" title=\"{{display.username}}\">{{display.username}}</a></td>\n                <td title=\"{{display.psw}}\">{{display.psw}}</td>\n                <td title=\"{{display.gender}}\">{{display.gender}}</td>\n                <td title=\"{{display.mobileno}}\">{{display.mobileno}}</td>\n                <td title=\"{{display.address}}\">{{display.address}}</td>\n                <td > <span class=\"btn btn-success\" routerLink=\"editadmin/{{display.id}}\">Edit </span>  </td>\n                <td > <span class=\"btn btn-danger\" (click)=\"deletedata(display.id)\">Delete </span>  </td>\n                \n            </tr>\n        </tbody>\n        </table>\n        </div>\n    </div>\n</div>\n\n\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { WorkshopService } from 'src/app/services/workshop.service';\n\n@Component({\n  selector: 'app-display-register-workshop',\n  templateUrl: './display-register-workshop.component.html',\n  styleUrls: ['./display-register-workshop.component.css']\n})\nexport class DisplayRegisterWorkshopComponent implements OnInit {\n  printdata={};\n  constructor(private service:WorkshopService) { }\n\n  ngOnInit(): void {\n    this.displaydata();\n  }\n  displaydata(){\n    this.service.printevent().subscribe(data => this.printdata = data);\n  }\n  delete(id){\n    if(window.confirm(\"are you sure want to delete data ? \")){\n    this.service.deleteworkshop(id).subscribe(data => this.displaydata());\n  }}\n}\n","<div class=\"print-event\">\n    <div class=\"container\">\n        <h2>Workshop Register Entry</h2>\n        <div class=\"table-responsive table-design\">\n        <table class=\"table table-bordered table-striped\">\n            <thead>\n            <tr>\n                <th>ID</th>\n                <th>name</th>\n                <th>email</th>\n                <th>title</th>\n                <th>study</th>\n                <th>address</th>\n                <th>Delete</th>\n            </tr>\n        </thead>\n            <tbody>\n            <tr *ngFor=\"let pdata of printdata\">\n                <td>{{pdata.id}}</td>\n                <td title=\"{{pdata.name}}\">{{pdata.name}}</td>\n                <td><a href=\"mailto:{{pdata.email}}\" title=\"{{pdata.email}}\">{{pdata.email}}</a></td>\n                <td title=\"{{pdata.title}}\">{{pdata.title}}</td>\n                <td title=\"{{pdata.study}}\">{{pdata.study}}</td>\n                <td title=\"{{pdata.address}}\">{{pdata.address}}</td>\n                <td><span (click)=\"delete(pdata.id)\" class=\"btn btn-danger\">Delete</span></td>\n            </tr>\n        </tbody>\n        </table>\n        </div>\n    </div></div>\n    ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EvtRegisterClas } from 'src/app/interfaceclass/evt-register-clas';\nimport { UpcomingEvt } from 'src/app/interfaceclass/upcoming-evt';\nimport { WorkshopService } from 'src/app/services/workshop.service';\n\n@Component({\n  selector: 'app-display-total-workshop',\n  templateUrl: './display-total-workshop.component.html',\n  styleUrls: ['./display-total-workshop.component.css']\n})\nexport class DisplayTotalWorkshopComponent implements OnInit {\n  bookidtoupdate = 0;\n  date = new Date('yyyy-MM-dd');\n  constructor(private service:WorkshopService,  private router:Router) { }\n  ngOnInit(): void {\n    this.displaytotalWorkshop();\n    }\n  mydata:any = {};\n  imgpath = \"./assets/img/\";\ndisplaytotalWorkshop(){\n this.mydata =  this.service.displayworkshop();\n}\nselectedFile :any;\nonFileSelected(event) {\n    this.selectedFile = event.target.value;\n}\n\ndelete(id){\n  if(window.confirm(\"are you sure want to delete data ?\")){\n  this.service.deleteWorkshop(id).subscribe(data => this.displaytotalWorkshop());\n}}\n\n}\n","<div class=\"print-event\">\n    <div class=\"container\">\n        <h2>Total Workshop</h2>\n        <div class=\"table-responsive table-design\">\n        <table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th>ID</th>\n        <th>src</th>\n        <th>title</th>\n        <th>date</th>\n        <th>description</th>\n        <th>Edit data</th>\n        <th>Delete data</th>\n    </tr>\n</thead>\n    <tbody>\n    <tr *ngFor=\"let s of mydata | async\">\n        <td>{{s.id}}</td>\n        <td><img src=\"{{imgpath}}{{s.src}}\" alt=\"\" width=\"80px\"> </td>\n        <td title=\"{{s.title}}\">{{s.title}}</td>\n        <td title=\"{{s.date}}\">{{s.date}}</td>\n        <td title=\"{{s.description}}\">{{s.description}}</td>\n        <td><span  class=\"btn btn-success\" [routerLink]=\"['editworkshop/',s.id]\">Edit</span></td>\n        <td><span (click)=\"delete(s.id)\" class=\"btn btn-danger\">Delete</span></td>\n    </tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n<router-outlet></router-outlet>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-edit-admin',\n  templateUrl: './edit-admin.component.html',\n  styleUrls: ['./edit-admin.component.css']\n})\nexport class EditAdminComponent implements OnInit {\n  editdata:any = {};\n  id = parseInt(this.Activerouter.snapshot.params['id']);\n  paddingdata: FormGroup;\n  data : any = \"\";\n  imgset : any = \"\";\n \n  constructor(private formbuilder:FormBuilder , private services:AdminService, private Activerouter:ActivatedRoute , private router:Router) { }\n  ngOnInit(): void {\n    this.services.getadmindWithId(this.id).subscribe(data => this.editdata = data);\n    this.paddingdata = this.formbuilder.group({\n      fullname:new FormControl('',[Validators.required]),\n      username:new FormControl('',[Validators.required]),\n      psw:new FormControl(null,[Validators.required]),\n      conformpass: new FormControl(null,[Validators.required]),\n      gender:new FormControl('',[Validators.required]),\n      mobileno:new FormControl('',[Validators.required,Validators.minLength(10),Validators.maxLength(10)]),\n      address:new FormControl('',[Validators.required,Validators.minLength(15),Validators.maxLength(40)]),\n      imgpath:new FormControl(this.imgset,[Validators.required])\n    },{\n      validators :this.MustMatch('psw','conformpass')\n    });\n  }\n\n\n  get imgpath(){return this.paddingdata.get('imgset')}\n  get fullname(){return this.paddingdata.get('fullname')}\n  get username(){return this.paddingdata.get('username')}\n  get psw(){ return this.paddingdata.get('psw')}\n  get conformpass(){    return this.paddingdata.get('conformpass');  }\n  get gender(){ return this.paddingdata.get('gender')}\n  get mobileno(){ return this.paddingdata.get('mobileno')}\n  get address(){ return this.paddingdata.get('address')}\n\n  onselectedFile(){\n    this.editdata.imgpath = this.editdata.imgpath.substring(12,);\n    return this.paddingdata.controls['imgpath']?.setValue(this.editdata.imgpath);\n }\n\n  MustMatch(controlName: string,matchingControlName:string){\n    return(formGroup:FormGroup)=>{\n      const control = formGroup.controls[controlName];\n      const matching = formGroup.controls[matchingControlName];\n      if(matching.errors && !matching.errors.MustMatch){\n        return \n      }\n      if(control.value != matching.value){\n        matching.setErrors({MustMatch:true})\n      }else{\n        matching.setErrors(null);\n      }\n    }\n  }\n\n\n  change;\n  editdatas(){\n    this.services.Updateadmindata(this.id, this.editdata).subscribe(data => { \n      this.router.navigate(['admin/displayadmin']);\n      alert('data updated sussfully');\n      this.change = data\n     })\n\n  }\n  close(){\n    this.router.navigate(['admin/displayadmin']);\n  }\n \n}\n","\n<div class=\" banner-login\">\n    <div class=\"container\">\n       <div class=\"register\">\n          <h2>Edit Form</h2>\n          <div class=\"row\">\n            <div class=\"col-xs-12\">\n          <form [formGroup]=\"paddingdata\" >\n         \n             <div class=\"inputBox\">\n               <input type=\"text\" name=\"fullname\" id=\"fullname\" formControlName=\"fullname\" [(ngModel)]=\"editdata.fullname\" />\n               <label for=\"fullname\"><i class=\"fa fa-user\"></i> fullname :</label>\n               <span class=\"text-danger\" *ngIf=\"!fullname?.valid && (fullname?.touched || fullname?.dirty)\" >\n                 Please enter your fullname \n              </span> \n            </div>\n             <div class=\"inputBox\">\n                <input type=\"text\" name=\"username\" id=\"username\" formControlName=\"username\" [(ngModel)]=\"editdata.username\" />\n                <label for=\"username\"><i class=\"fa fa-user\"></i> UserName :</label>\n                <span class=\"text-danger\" *ngIf=\"!username?.valid && (username?.touched || username?.dirty)\" >\n                  Please enter your username \n               </span> \n             </div>\n             <div class=\"inputBox\">    \n                <input type=\"password\" id=\"psw\" name=\"psw\"  formControlName=\"psw\" [(ngModel)]=\"editdata.psw\">\n                <label><i class=\"fa fa-eye\" aria-hidden=\"true\"></i> Password</label> \n                <span class=\"text-danger\" *ngIf=\"!psw?.valid && (psw?.touched || psw?.dirty)\" >\n                  Please enter your password \n               </span> \n          </div>\n          <div class=\"inputBox\">    \n            <input type=\"text\" name=\"conformpass\" id=\"conformpass\" formControlName=\"conformpass\" required/>\n            <label><i class=\"fa fa-eye\" aria-hidden=\"true\"></i>&nbsp; Confirm Password : </label>\n            <div *ngIf=\"conformpass.errors\" class=\"text-success\">\n              <span *ngIf=\"conformpass.errors.required\" >\n                please enter confirm password\n              </span>\n              <span *ngIf=\"conformpass.errors.MustMatch\" >\n                Password dosen't matched\n              </span>\n           </div>\n         </div>\n             <div class=\" radiobtn\">\n               <label><i class=\"fa fa-transgender\" aria-hidden=\"true\"></i>&nbsp; Gender : </label>\n               <label><input type=\"radio\" name=\"gender\" id=\"Male\" formControlName=\"gender\" [(ngModel)]=\"editdata.gender\" value=\"Male\" /> Male </label>\n               <label><input type=\"radio\" name=\"gender\" id=\"Female\" formControlName=\"gender\" [(ngModel)]=\"editdata.gender\" value=\"Female\"/> FeMale</label>\n                <span class=\"text-danger\" *ngIf=\"!gender?.valid && (gender?.touched || gender?.dirty)\" >\n                  Please enter gender \n               </span> \n             </div>\n             <div class=\"inputBox\">\n                <input type=\"number\" id=\"mobileno\" formControlName=\"mobileno\" [(ngModel)]=\"editdata.mobileno\" />\n                <span id=\"mobileerror\" class=\"text-danger font-weight-bold\"></span>\n                <label><i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Mobile Number :</label>\n                <span class=\"text-danger\" *ngIf=\"!mobileno?.valid && (mobileno?.touched || mobileno?.dirty)\" >\n                  Please enter your mobileno \n               </span> \n             </div>\n             <div class=\"inputBox addressBx\">\n                <input type=\"text\" id=\"address\" name=\"address\" formControlName=\"address\" [(ngModel)]=\"editdata.address\" />\n                <span class=\"forgot locate\"><a href=\"#\"><i class=\"fa fa-map-marker\"></i></a> </span>\n                <label><i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Address</label>\n                <span class=\"text-danger\" *ngIf=\"!address?.valid && (address?.touched || address?.dirty)\" >\n                  Please enter your address \n               </span> \n             </div>\n             <div class=\"inputBox\">\n              <input type=\"text\" name=\"imgpath\" formControlName=\"imgpath\" readonly>\n               <input type=\"file\" name=\"imgpath\" id=\"imgpath\"  (change)=onselectedFile() formControlName=\"imgpath\" [(ngModel)]=\"editdata.imgpath\"  />\n               <label for=\"fullname\"><i class=\"fa fa-user\"></i> SRC :</label>\n            </div>\n           \n           \n            \n             <div class=\"text-center\">\n              <div class=\"btn-group\">\n             <button class=\"btn btn-success btn-lg\" type=\"submit\" (ngSubmit)=\"editdatas()\">Submit Data</button>\n             <button class=\"btn btn-danger btn-lg\" (click)=\"close()\" >Close</button>\n            </div>\n             <div class=\"go_regster\">Already have an account?<a routerLink=\"/login\" title=\"Sign Up\"> Sign In</a></div>\n             <div class=\"go_regster\"><a routerLink=\"/\" title=\"Sign Up\"> Back To Home</a></div>\n             </div>\n          </form>\n       </div> \n    </div>\n </div></div></div>\n\n\n\n\n ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-slider',\n  templateUrl: './edit-slider.component.html',\n  styleUrls: ['./edit-slider.component.css']\n})\nexport class EditSliderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit-slider works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkshopService } from 'src/app/services/workshop.service';\n\n@Component({\n  selector: 'app-editworkshop',\n  templateUrl: './editworkshop.component.html',\n  styleUrls: ['./editworkshop.component.css']\n})\nexport class EditworkshopComponent implements OnInit {\n  editdata:any = {};\n  id = parseInt(this.Activerouter.snapshot.params['id']);\n  passdata: FormGroup;\n  // date = new Date('yyyy-MM-dd');\n  URL = \"./assets/img/pick4.png\";\n  constructor(private service:WorkshopService, private formbuilder:FormBuilder ,private Activerouter:ActivatedRoute, private router:Router) { }\n\n  ngOnInit(): void {\n    this.service.displayworkshopid(this.id).subscribe(data => this.editdata = data);\n\n    this.passdata = this.formbuilder.group({\n      src: [\"\",[Validators.required]],\n      title: ['',[Validators.required]],\n     date: ['',[Validators.required]],\n     description: ['',[Validators.required,Validators.minLength(15),Validators.maxLength(30)]]\n   });\n   this.edit();\n  }\n  get src(){return this.passdata.get('src')}\n  get title(){return this.passdata.get('title')}\n  get date(){return this.passdata.get('date')}\n  get description(){return this.passdata.get('description')}\n  onselectedFile(){\n    this.editdata.src = this.editdata.src.substring(12,);\n    return this.passdata.controls['src']?.setValue(this.editdata.src);\n }\n  edit(){\n    this.service.displayworkshopid(this.id).subscribe(data =>{\n      this.passdata.controls['src']?.setValue(data.src);\n      this.passdata.controls['title']?.setValue(data.title);\n      this.passdata.controls['date']?.setValue(data.date);\n      this.passdata.controls['description']?.setValue(data.description);\n    })\n  }\n\n\n  selectedFile :any;\nonFileSelected(event) {\n    this.selectedFile = event.target.value;\n}\nmydata:any = {};\ndisplaytotalWorkshop(){\n  this.mydata =  this.service.displayworkshop();\n }\nsubmitdata(paddingdata){\n    this.service.UpdateBook(this.id, this.editdata).subscribe(data => { this.router.navigate(['admin/displayWorkshop']) });\n    this.displaytotalWorkshop();\n    console.log(paddingdata.control);\n  }\n  close(){\n    this.router.navigate(['admin/displayWorkshop']);\n  }\n}\n","<div class=\" banner-login\">\n    <div class=\"container\">\n       <div class=\"register\">\n<h2 >Edit Workshop</h2>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n    <form [formGroup]=\"passdata\" (ngSubmit)=\"submitdata(passdata)\">\n\n    <div class=\"inputBox\">\n        <input type=\"text\" name=\"src\" formControlName=\"src\" readonly>\n        <input type=\"file\" name=\"src\" formControlName=\"src\"  (change)=onselectedFile()  id=\"src\" [(ngModel)]=\"editdata.src\"  placeholder=\"enter title\" />\n        <label for=\"fullname\"><i class=\"fa fa-user\"></i> Image :</label>\n        <span class=\"text-danger\" *ngIf=\"!src?.valid && (src?.touched || src?.dirty)\" >\n            Please enter your src \n         </span> \n    </div>\n    <div class=\"inputBox\">\n        <input type=\"text\" formControlName=\"title\" [(ngModel)]=\"editdata.title\" name=\"title\" placeholder=\"enter title\"  />\n        <label for=\"username\"><i class=\"fa fa-user\"></i> UserName :</label>\n        <span class=\"text-danger\" *ngIf=\"!title?.valid && (title?.touched || title?.dirty)\" >\n            Please enter your title \n         </span> \n    </div>\n    <div class=\"inputBox\">\n        <input type=\"text\" name=\"date\" formControlName=\"date\" readonly>\n        <input type=\"date\" name=\"date\" formControlName=\"date\" [(ngModel)]=\"editdata.date\"   />\n        <label for=\"Date\"><i class=\"fa fa-calander\"></i> Date :</label>\n        <span class=\"text-danger\" *ngIf=\"!date?.valid && (date?.touched || date?.dirty)\" >\n            Please enter your date \n         </span> \n    </div>\n    <div class=\"inputBox\">\n        <textarea name=\"description\" formControlName=\"description\" [(ngModel)]=\"editdata.description\" placeholder=\"enter description\" class=\"form-control input-lg\"></textarea>\n        <label for=\"description\"><i class=\"fa fa-user\"></i> Description :</label>\n        <!-- <span class=\"text-danger\" *ngIf=\"!description?.valid && (description?.touched || description?.dirty)\" >\n            Please enter your description \n         </span>  -->\n    </div>\n    <div class=\"inputBox btn-group\">\n        <button class=\"btn btn-success btn-lg\" >Submit</button>\n        <button class=\"btn btn-success btn-lg\" (click)=\"close()\">Close</button>\n\n    </div>\n    </form>\n    </div>\n</div>\n</div></div></div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mypipe'\n})\nexport class MypipePipe implements PipeTransform {\n\n  transform(value: any,): unknown {\n          return  value+100;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  editdata:any = {};\n  // id = this.Activerouter.snapshot.params['id'];\n  id = '/2'\n  paddingdata:FormGroup;\n  \n  constructor(private formbuilder:FormBuilder , private services:AdminService, private Activerouter:ActivatedRoute , private router:Router) { }\n  ngOnInit(): void {\n\n    this.services.getadmindWithId(localStorage.getItem('loginid')).subscribe(data => this.editdata = data);\n\n    this.paddingdata = this.formbuilder.group({\n      imgpath:['',[Validators.required]],\n      fullname:['',[Validators.required]],\n      username:['',[Validators.required]],\n      psw:['',[Validators.required]],\n      gender:['',[Validators.required]],\n      mobileno:['',[Validators.required]],\n      address:['',[Validators.required,Validators.minLength(15),Validators.maxLength(40)]],\n    });\n  }\n  \n  get imgpath(){return this.paddingdata.get('imgpath')}\n  get fullname(){return this.paddingdata.get('fullname')}\n  get username(){return this.paddingdata.get('username')}\n  get psw(){ return this.paddingdata.get('psw')}\n  get gender(){ return this.paddingdata.get('gender')}\n  get mobileno(){ return this.paddingdata.get('mobileno')}\n  get address(){ return this.paddingdata.get('address')}\n\n  onselectedFile(){\n    this.editdata.imgpath = this.editdata.imgpath.substring(12,);\n\n    return this.paddingdata.controls['imgpath']?.setValue(this.editdata.imgpath);\n }\n\n  editdatas(paddingdata){\n    this.services.Updateadmindata(localStorage.getItem('loginid'), this.editdata).subscribe(data => { this.router.navigate(['admin/displayadmin']) })\n \n  }\n}\n","\r\n\r\n    <div class=\"container\">\r\n  \r\n          <h2>Edit Form</h2>\r\n          <br>\r\n          <form [formGroup]=\"paddingdata\" (ngSubmit)=\"editdatas(paddingdata)\">\r\n         \r\n             <div class=\"form-group\">\r\n                 <b><i class=\"fa fa-user\"></i> fullname :</b>\r\n               <input type=\"text\" name=\"fullname\" id=\"fullname\" class=\"form-control\" formControlName=\"fullname\" [(ngModel)]=\"editdata.fullname\" />\r\n               <!-- <label for=\"fullname\"><i class=\"fa fa-user\"></i> fullname :</label> -->\r\n               <span class=\"text-danger\" *ngIf=\"!fullname?.valid && (fullname?.touched || fullname?.dirty)\" >\r\n                 Please enter your fullname \r\n              </span> \r\n            </div>\r\n              <div class=\"form-group\">\r\n                <b><i class=\"fa fa-user\"></i> UserName :</b>\r\n                <input type=\"text\" name=\"username\" id=\"username\" class=\"form-control\" formControlName=\"username\" [(ngModel)]=\"editdata.username\" />\r\n                <span class=\"text-danger\" *ngIf=\"!username?.valid && (username?.touched || username?.dirty)\" >\r\n                  Please enter your username \r\n               </span> \r\n             </div>\r\n              <div class=\"form-group\"> \r\n                  <b><i class=\"fa fa-eye\" aria-hidden=\"true\"></i> password :</b>\r\n                <input type=\"text\" id=\"psw\" name=\"psw\" class=\"form-control\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" formControlName=\"psw\" [(ngModel)]=\"editdata.psw\">\r\n                <span class=\"text-danger\" *ngIf=\"!psw?.valid && (psw?.touched || psw?.dirty)\" >\r\n                  Please enter your password \r\n               </span> \r\n          </div>\r\n\r\n             <div class=\"form-group\">  \r\n               <b><i class=\"fa fa-transgender\" aria-hidden=\"true\"></i>&nbsp; Gender : </b> &nbsp;\r\n               <label><input type=\"radio\" name=\"gender\" id=\"Male\" formControlName=\"gender\" [(ngModel)]=\"editdata.gender\" value=\"Male\" /> Male </label> &nbsp;&nbsp;\r\n               <label><input type=\"radio\" name=\"gender\" id=\"Female\" formControlName=\"gender\" [(ngModel)]=\"editdata.gender\" value=\"Female\"/> FeMale</label>\r\n                <span class=\"text-danger\" *ngIf=\"!gender?.valid && (gender?.touched || gender?.dirty)\" >\r\n                  Please enter gender \r\n               </span> \r\n             </div>\r\n              <div class=\"form-group\">\r\n                  <b><i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Mobile Number : </b>\r\n                <input type=\"number\" id=\"mobileno\" class=\"form-control\" pattern=\"\\d{3}[\\-]\\d{3}[\\-]\\d{4}\" formControlName=\"mobileno\" [(ngModel)]=\"editdata.mobileno\" />\r\n                <span id=\"mobileerror\" class=\"text-danger font-weight-bold\"></span>\r\n                <!-- <label><i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Mobile Number :</label> -->\r\n                <span class=\"text-danger\" *ngIf=\"!mobileno?.valid && (mobileno?.touched || mobileno?.dirty)\" >\r\n                  Please enter your mobileno \r\n               </span> \r\n             </div>\r\n             <div class=\"form-group\">\r\n                 <b><i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Address : </b>\r\n                <input type=\"text\" id=\"address\" class=\"form-control\" name=\"address\" formControlName=\"address\" [(ngModel)]=\"editdata.address\" />\r\n                <span class=\"forgot locate\"><a href=\"#\"><i class=\"fa fa-map-marker\"></i></a> </span>\r\n                <!-- <label><i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Address</label> -->\r\n                <span class=\"text-danger\" *ngIf=\"!address?.valid && (address?.touched || address?.dirty)\" >\r\n                  Please enter your address \r\n               </span> \r\n             </div>\r\n              <div class=\"form-group\">\r\n                  <b>edit Profile : </b>\r\n               <input type=\"file\" name=\"imgpath\" class=\"form-control\" id=\"imgpath\" formControlName=\"imgpath\" (change)=onselectedFile() [(ngModel)]=\"editdata.imgpath\"  />\r\n               <!-- <label for=\"fullname\"><i class=\"fa fa-user\"></i> SRC :</label> -->\r\n            </div>\r\n             <div class=\"text-center\">\r\n             <button class=\"btn btn-success btn-lg\" class=\"btn btn-success\" type=\"submit\" >Edit Data</button>\r\n\r\n             <h4>Already have an account?<a routerLink=\"/login\" title=\"Sign Up\"> Sign In</a></h4>\r\n             <h5><a routerLink=\"/\" title=\"Sign Up\" class=\"btn btn-primary\"><i class=\"fa fa-home\"></i> Back To Home</a></h5>\r\n             </div>\r\n          </form>\r\n       </div> \r\n\r\n\r\n\r\n ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AdminComponent } from '../admin/admin.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeactivateGuard implements CanDeactivate<AdminComponent> {\n  canDeactivate(component: AdminComponent, currentRoute: ActivatedRouteSnapshot, currentState: RouterStateSnapshot, nextState?: RouterStateSnapshot | undefined): boolean  {\n  \n   return window.confirm(\"are you sure want to logout\");\n   throw new Error('Method not implemented.');\n  }\n}\n"]}